#Написати програму, яка переміщає всі нулі у кінець списку.

#Ваше завдання — змінити список так, щоб усі нулі опинилися наприкінці списку.

#Порядок ненульових чисел має зберегтися!
#[0, 1, 0, 12, 3] -> [1, 12, 3, 0, 0]
#[0] -> [0]
#[1, 0, 13, 0, 0, 0, 5] -> [1, 13, 5, 0, 0, 0, 0]
#[9, 0, 7, 31, 0, 45, 0, 45, 0, 45, 0, 0, 96, 0] -> [9, 7, 31, 45, 45, 45, 96, 0, 0, 0, 0, 0, 0, 0]

# Варианты решений
############ v1 ###########
#ввод данный с помощью case_split('->')
numbers = [
    "[0, 1, 0, 12, 3] -> [1, 12, 3, 0, 0]",
    "[0] -> [0]",
    "[1, 0, 13, 0, 0, 0, 5] -> [1, 13, 5, 0, 0, 0, 0]",
    "[9, 0, 7, 31, 0, 45, 0, 45, 0, 45, 0, 0, 96, 0] -> [9, 7, 31, 45, 45, 45, 96, 0, 0, 0, 0, 0, 0, 0]"
]

# Индексы
i = 0  # Индекс для прохождения списка
non_zero_index = 0  # Индекс для вставки ненулевых элементов

# Перемещение ненулевых элементов на начало списка
while i < len(numbers):
    if numbers[i] != 0:
        numbers[non_zero_index] = numbers[i]
        non_zero_index += 1
    i += 1

# Заполнение остатка списка нулями
while non_zero_index < len(numbers):
    numbers[non_zero_index] = 0
    non_zero_index += 1

# Вывод списка
print(f"Результат v1: {numbers}")



############ v2 ###########

#ввод данных с помощью кортежного списка
test_case=[
    ([0, 1, 0, 12, 3] ,[1, 12, 3, 0, 0]),
    ([0] , [0]),
    ([1, 0, 13, 0, 0, 0, 5] , [1, 13, 5, 0, 0, 0, 0]),
    ([9, 0, 7, 31, 0, 45, 0, 45, 0, 45, 0, 0, 96, 0] , [9, 7, 31, 45, 45, 45, 96, 0, 0, 0, 0, 0, 0, 0])
    ]

# Список списков, который будет обрабатываться в цикле
test_cases = [
    [0, 1, 0, 12, 3],
    [0],
    [1, 0, 13, 0, 0, 0, 5],
    [9, 0, 7, 31, 0, 45, 0, 45, 0, 45, 0, 0, 96, 0]
]

def move_zeros_to_end(lst):# Задаем функцию вывода нулевых элементов в конец списка
    i = 0 # индекс текущего элемента в списке
    non_zero_index = 0 # индекс куда будет помещен следующий ненулевой элемент
    while i < len(lst): #цикл прохода по всем элементам списка
        if lst[i] != 0: #если текущий элемент не равен нулю
            lst[non_zero_index] = lst[i]  # перемещает ненулевой элемент на позицию non_zero_index
            non_zero_index += 1   # Увеличиваем индекс для ненулевых элементов
        i += 1 # переходим к следующему элементу
    while non_zero_index < len(lst): # заполняет оставшиеся елементы нулями
        lst[non_zero_index] = 0
        non_zero_index += 1 # переходим к следующему индексу
    return lst # возвращает измененый список

#Обработка каждого списка и вывод результата
for test_case in test_cases:
    result = move_zeros_to_end(test_case[:])  # Копия списка,чтобы не изменялся оригинал
    print(f'Result v2:{result}')



############# v3 ###########


lst=[
    ([0, 1, 0, 12, 3] ,[1, 12, 3, 0, 0]),
    ([0] , [0]),
    ([1, 0, 13, 0, 0, 0, 5] , [1, 13, 5, 0, 0, 0, 0]),
    ([9, 0, 7, 31, 0, 45, 0, 45, 0, 45, 0, 0, 96, 0] , [9, 7, 31, 45, 45, 45, 96, 0, 0, 0, 0, 0, 0, 0])
    ]
def move_zeros_to_end(lst):
    while 0 in lst:  # Пока есть нули в списке
        lst.remove(0)  # Удаляем первый ноль
        lst.append(0)  # Добавляем ноль в конец
    return lst
print(f'Result V3:{move_zeros_to_end(lst)}')